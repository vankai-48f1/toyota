<?php // phpcs:ignore WordPress.Files.FileName.NotHyphenatedLowercase
/**
 * Autoload real
 *
 * @package car-dealer-helper
 */

// autoload_real.php @generated by Composer.

/**
 * ComposerAutoloader
 */
class ComposerAutoloaderInit385b81b594b8370645f7d3a89cc12586 {

	/**
	 * Static
	 *
	 * @var $loader .
	 */
	private static $loader;

	/**
	 * Load Class Loader
	 *
	 * @param string $class .
	 */
	public static function loadClassLoader( $class ) {
		if ( 'Composer\Autoload\ClassLoader' === $class ) {
			require __DIR__ . '/ClassLoader.php';
		}
	}
	/**
	 * Get loader
	 */
	public static function getLoader() {
		if ( null !== self::$loader ) {
			return self::$loader;
		}

		spl_autoload_register( array( 'ComposerAutoloaderInit385b81b594b8370645f7d3a89cc12586', 'loadClassLoader' ), true, true );
		self::$loader = $loader = new \Composer\Autoload\ClassLoader();
		spl_autoload_unregister( array( 'ComposerAutoloaderInit385b81b594b8370645f7d3a89cc12586', 'loadClassLoader' ) );

		$use_static_loader = PHP_VERSION_ID >= 50600 && ! defined( 'HHVM_VERSION' );
		if ( $use_static_loader ) {
			require_once __DIR__ . '/autoload_static.php';

			call_user_func( \Composer\Autoload\ComposerStaticInit385b81b594b8370645f7d3a89cc12586::getInitializer( $loader ) );
		} else {
			$map = require __DIR__ . '/autoload_namespaces.php';
			foreach ( $map as $namespace => $path ) {
				$loader->set( $namespace, $path );
			}

			$map = require __DIR__ . '/autoload_psr4.php';
			foreach ( $map as $namespace => $path ) {
				$loader->setPsr4( $namespace, $path );
			}

			$classMap = require __DIR__ . '/autoload_classmap.php';
			if ( $classMap ) {
				$loader->addClassMap( $classMap );
			}
		}

		$loader->register( true );

		if ( $use_static_loader ) {
			$include_files = Composer\Autoload\ComposerStaticInit385b81b594b8370645f7d3a89cc12586::$files;
		} else {
			$include_files = require __DIR__ . '/autoload_files.php';
		}
		foreach ( $include_files as $file_identifier => $file ) {
			composerRequire385b81b594b8370645f7d3a89cc12586( $file_identifier, $file );
		}

		return $loader;
	}
}

function composerRequire385b81b594b8370645f7d3a89cc12586( $file_identifier, $file ) {
	if ( empty( $GLOBALS['__composer_autoload_files'][ $file_identifier ] ) ) {
		require $file;

		$GLOBALS['__composer_autoload_files'][ $file_identifier ] = true;
	}
}
